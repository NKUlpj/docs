import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.8dd3e441.js";const m=JSON.parse('{"title":"[0121]. best-time-to-buy-and-sell-stock","description":"","frontmatter":{},"headers":[],"relativePath":"LeetCode/0121-best-time-to-buy-and-sell-stock.md","filePath":"LeetCode/0121-best-time-to-buy-and-sell-stock.md","lastUpdated":1696496243000}'),e={name:"LeetCode/0121-best-time-to-buy-and-sell-stock.md"},p=l(`<h1 id="_0121-best-time-to-buy-and-sell-stock" tabindex="-1">[0121]. best-time-to-buy-and-sell-stock <a class="header-anchor" href="#_0121-best-time-to-buy-and-sell-stock" aria-label="Permalink to &quot;[0121]. best-time-to-buy-and-sell-stock&quot;">​</a></h1><p>难度： 简单</p><p>标签： [数组]、[动态规划]</p><h2 id="_1-problem" tabindex="-1">1. Problem <a class="header-anchor" href="#_1-problem" aria-label="Permalink to &quot;1. Problem&quot;">​</a></h2><p>给定一个数组 prices，它的第i个元素 prices[i]表示一支给定股票第i天的价格。</p><p>你只能选择某一天买入这只股票，并选择在未来的某一个不同的日子卖出该股票。设计一个算法来计算你所能获取的最大利润。</p><p>返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 0 。</p><blockquote><p><a href="https://leetcode.cn/problems/best-time-to-buy-and-sell-stock" target="_blank" rel="noreferrer">https://leetcode.cn/problems/best-time-to-buy-and-sell-stock</a></p></blockquote><h2 id="_2-example" tabindex="-1">2. Example <a class="header-anchor" href="#_2-example" aria-label="Permalink to &quot;2. Example&quot;">​</a></h2><p>示例 1：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">输入：[7,1,5,3,6,4]</span></span>
<span class="line"><span style="color:#e1e4e8;">输出：5</span></span>
<span class="line"><span style="color:#e1e4e8;">解释：在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。</span></span>
<span class="line"><span style="color:#e1e4e8;">     注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格；同时，你不能在买入前卖出股票。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">输入：[7,1,5,3,6,4]</span></span>
<span class="line"><span style="color:#24292e;">输出：5</span></span>
<span class="line"><span style="color:#24292e;">解释：在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。</span></span>
<span class="line"><span style="color:#24292e;">     注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格；同时，你不能在买入前卖出股票。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>示例 2：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">输入：prices = [7,6,4,3,1]</span></span>
<span class="line"><span style="color:#e1e4e8;">输出：0</span></span>
<span class="line"><span style="color:#e1e4e8;">解释：在这种情况下, 没有交易完成, 所以最大利润为 0。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">输入：prices = [7,6,4,3,1]</span></span>
<span class="line"><span style="color:#24292e;">输出：0</span></span>
<span class="line"><span style="color:#24292e;">解释：在这种情况下, 没有交易完成, 所以最大利润为 0。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>提示：</p><ul><li><code>1 &lt;= prices.length &lt;= 10^5</code></li><li><code>0 &lt;= prices[i] &lt;= 10^4</code></li></ul><h2 id="_3-thinking" tabindex="-1">3. Thinking <a class="header-anchor" href="#_3-thinking" aria-label="Permalink to &quot;3. Thinking&quot;">​</a></h2><p>用<code>res</code>记录结果,用<code>pre</code>记录前面的最小值。遍历到第i天时，更新结果<code>res</code>和<code>pre</code>。</p><h2 id="_4-ans" tabindex="-1">4. Ans <a class="header-anchor" href="#_4-ans" aria-label="Permalink to &quot;4. Ans&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-UQXvZ" id="tab-LrUEBAb" checked="checked"><label for="tab-LrUEBAb">C ++</label></div><div class="blocks"><div class="language-C vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">class Solution {</span></span>
<span class="line"><span style="color:#E1E4E8;">public:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">maxProfit</span><span style="color:#E1E4E8;">(vector</span><span style="color:#F97583;">&lt;int&gt;&amp;</span><span style="color:#E1E4E8;"> prices) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> pre </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">prices</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> res </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> prices.</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">(); i </span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">            res </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(res, </span><span style="color:#FFAB70;">prices</span><span style="color:#E1E4E8;">[i] </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> pre);</span></span>
<span class="line"><span style="color:#E1E4E8;">            pre </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">min</span><span style="color:#E1E4E8;">(pre, </span><span style="color:#FFAB70;">prices</span><span style="color:#E1E4E8;">[i]);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> res;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">class Solution {</span></span>
<span class="line"><span style="color:#24292E;">public:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">maxProfit</span><span style="color:#24292E;">(vector</span><span style="color:#D73A49;">&lt;int&gt;&amp;</span><span style="color:#24292E;"> prices) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> pre </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#E36209;">prices</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> res </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> prices.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">(); i </span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            res </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(res, </span><span style="color:#E36209;">prices</span><span style="color:#24292E;">[i] </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> pre);</span></span>
<span class="line"><span style="color:#24292E;">            pre </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">(pre, </span><span style="color:#E36209;">prices</span><span style="color:#24292E;">[i]);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> res;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></div></div><h2 id="_5-similar-problem" tabindex="-1">5. Similar problem <a class="header-anchor" href="#_5-similar-problem" aria-label="Permalink to &quot;5. Similar problem&quot;">​</a></h2><ul><li><a href="./0122-best-time-to-buy-and-sell-stock-ii.html">0122-best-time-to-buy-and-sell-stock-ii</a></li><li><a href="./0123-best-time-to-buy-and-sell-stock-iii.html">0123-best-time-to-buy-and-sell-stock-iii</a></li><li><a href="./0188-best-time-to-buy-and-sell-stock-iv.html">0188-best-time-to-buy-and-sell-stock-iv</a></li><li><a href="./0309-best-time-to-buy-and-sell-stock-with-cooldown.html">0309-best-time-to-buy-and-sell-stock-with-cooldown</a></li><li><a href="./0714-best-time-to-buy-and-sell-stock-with-transaction-fee.html">0714-best-time-to-buy-and-sell-stock-with-transaction-fee</a></li></ul>`,21),o=[p];function t(r,c,i,y,E,d){return a(),n("div",null,o)}const u=s(e,[["render",t]]);export{m as __pageData,u as default};
